<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:KeyAsio.Gui.UserControls">

    <Style TargetType="{x:Type controls:CustomizableButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="#f0f0f0" />
        <Setter Property="BorderBrush" Value="#f0f0f0" />
        <Setter Property="Foreground" Value="#484848" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Height" Value="0" />
        <Setter Property="MouseOverBackground" Value="#f3f5f5" />
        <Setter Property="MouseOverForeground" Value="#484848" />
        <Setter Property="MouseDownBackground" Value="#e8e8e8" />
        <Setter Property="MouseDownForeground" Value="#323232" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CustomizableButton}">
                    <Border
                        x:Name="BorderMain"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <StackPanel
                            HorizontalAlignment="Center"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Orientation="{TemplateBinding IconOrientation}">
                            <Viewbox
                                x:Name="IconViewBox"
                                Width="{TemplateBinding IconSize}"
                                Height="{TemplateBinding IconSize}"
                                Margin="{TemplateBinding IconMargin}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True">
                                <ContentControl x:Name="IconContent" Template="{TemplateBinding IconTemplate}" />
                            </Viewbox>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=IconContent, Path=Template}" Value="{x:Null}">
                            <Setter TargetName="IconViewBox" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderMain" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="BorderMain" Property="TextBlock.Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderMain" Property="Background" Value="{Binding MouseDownBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="BorderMain" Property="TextBlock.Foreground" Value="{Binding MouseDownForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BorderMain" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type controls:CustomizableButton}}" TargetType="{x:Type controls:SystemButton}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="IconMargin" Value="0" />
        <Setter Property="MouseOverBackground" Value="#50727272" />
        <Setter Property="MouseOverForeground" Value="White" />
        <Setter Property="MouseDownBackground" Value="#72727272" />
        <Setter Property="MouseDownForeground" Value="White" />
        <Setter Property="Width" Value="35" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style BasedOn="{StaticResource {x:Type controls:SystemButton}}" TargetType="{x:Type controls:MaxButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:MaxButton}">
                    <Border x:Name="MainBorder" Tag="{Binding IsWindowMax, RelativeSource={RelativeSource TemplatedParent}}">
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Viewbox
                                x:Name="IconViewBox"
                                Width="{TemplateBinding IconSize}"
                                Height="{TemplateBinding IconSize}"
                                Margin="{TemplateBinding IconMargin}"
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True">
                                <ContentControl
                                    x:Name="IconContent"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center" />
                            </Viewbox>
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=IconContent, Path=Template}" Value="{x:Null}">
                            <Setter TargetName="IconViewBox" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=MainBorder, Path=Tag}" Value="True">
                            <Setter TargetName="IconContent" Property="Template" Value="{DynamicResource RecoverTempl}" />
                            <Setter TargetName="IconViewBox" Property="Margin" Value="0,0,0,2" />
                            <Setter TargetName="IconViewBox" Property="Width" Value="20" />
                            <Setter TargetName="IconViewBox" Property="Height" Value="23" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=MainBorder, Path=Tag}" Value="False">
                            <Setter TargetName="IconContent" Property="Template" Value="{DynamicResource MaximizeTempl}" />
                            <Setter TargetName="IconViewBox" Property="Margin" Value="0" />
                            <Setter TargetName="IconViewBox" Property="Width" Value="16" />
                            <Setter TargetName="IconViewBox" Property="Height" Value="20" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="Transparent" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainBorder" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{Binding MouseDownBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type controls:SystemButton}}" TargetType="{x:Type controls:MinButton}">
        <Setter Property="IconMargin" Value="0,8,0,0" />
        <Setter Property="IconTemplate" Value="{DynamicResource MinimizeTempl}" />
    </Style>

    <Style BasedOn="{StaticResource {x:Type controls:SystemButton}}" TargetType="{x:Type controls:CloseButton}">
        <Setter Property="IconSize" Value="16" />
        <Setter Property="IconTemplate" Value="{DynamicResource CloseTempl}" />
        <Setter Property="MouseOverBackground" Value="#F0F72F2F" />
    </Style>

</ResourceDictionary>